1.
class game
{
private:
string game_name;
int timming;
string game_type;
public:
void get_detail_of_game();
void display_detail();
};
class players
{
private:
string player_name;
int player_id;
string player_roll;
public:
void get_player_detail();
void play();
}
class ball
{
private:
int size_of_ball;
string ball_type;
public:
void get_detail();
};
main()
{
game Game;
players goalkeeper,fowler,teamleader;
ball Ball;
}


2.2.Abstraction
Abstraction means hiding background details and giving relavent data to the user. Abstraction hides the implememntation details from user.here the example given below:
class N_142
{
public:
void call();
void sms();
};
class N_271:public N_142
{
public:
void MP3();
void FM_Radio();
void  Camera();
};
class B:public N_247
{
public:
void video_recording();
void read_mail();
}
the above classes having the features as given above.each features are having the functionality with them.when we are using this features it will run their corresponding implementation function.The implementation is irrelavant to the user.so it is hidden from outside world.

3.4.Encapsulation:
Wrapping of data and member function into single unit.exapmle mobile phone and mobile phone manufacturerhere the mobile phone having the datas as display camera keypad etc...Each data having their function to work as user need..so when the user process the data like camera etc..it will executetheir corresponding function and produce desire output to user.it will obtained by use of the encapsulation.the user dont have the idea in how its working all those things.Mobile manufacturer having their own datas and member function itself as a single unit.


